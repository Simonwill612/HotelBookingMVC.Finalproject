@model HotelBookingMVC.Finalproject2.ViewModels.FeedbackViewModel

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}
<style>
    .star {
        color: #ccc;
        cursor: pointer;
        font-size: 1.5rem;
        transition: color 0.2s ease-in-out;
    }

        input[type="radio"]:checked + .star,
        .star:hover,
        .star:hover ~ .star {
            color: gold;
        }

    .d-flex {
        display: flex;
        gap: 8px;
    }

</style>
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateFeedback" asp-controller="Home" method="post" id="feedbackForm">
            <div class="form-group">
                <label asp-for="StarRating" class="control-label">Rating</label>
                <div id="starRating" class="d-flex">
                    @for (int i = 1; i <= 5; i++)
                    {
                        <input type="radio" id="star-@i" name="StarRating" value="@i" class="d-none" />
                        <label for="star-@i" class="star" title="Rate @i stars">
                            &#9733;
                        </label>
                    }
                </div>
                <span asp-validation-for="StarRating" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Comment" class="control-label">Comment</label>
                <textarea asp-for="Comment" class="form-control"></textarea>
                <span asp-validation-for="Comment" class="text-danger"></span>
            </div>
            <input type="hidden" asp-for="HotelID" />
            <button type="submit" class="btn btn-primary">Submit</button>
        </form>
    </div>
</div>
<script>
    document.querySelectorAll('.star').forEach(star => {
        // Khi di chuột vào sao
        star.addEventListener('mouseover', function () {
            const stars = document.querySelectorAll('.star');
            stars.forEach(s => s.style.color = '#ccc'); // Reset màu
            for (let i = 0; i <= [...stars].indexOf(this); i++) {
                stars[i].style.color = 'gold'; // Đổi màu các sao trước đó
            }
        });

        // Khi chuột rời khỏi sao
        star.addEventListener('mouseout', function () {
            const stars = document.querySelectorAll('.star');
            stars.forEach(s => s.style.color = '#ccc'); // Reset màu
            const checkedStar = document.querySelector('input[type="radio"]:checked + .star');
            if (checkedStar) {
                for (let i = 0; i <= [...stars].indexOf(checkedStar); i++) {
                    stars[i].style.color = 'gold'; // Đổi màu sao đã chọn
                }
            }
        });
    });

    // Add custom form validation
    document.getElementById('feedbackForm').onsubmit = function () {
        const starRating = document.querySelector('input[name="StarRating"]:checked');
        const comment = document.querySelector('[name="Comment"]').value.trim();

        if (!starRating) {
            alert("Please select a star rating.");
            return false;
        }

        if (!comment) {
            alert("Please enter a comment.");
            return false;
        }

        return true;
    }
</script>
